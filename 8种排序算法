图片链接

1.冒泡排序
void bubbleSort(vector<int> & a){
    bool swapp = true;
    while(swapp){
        swapp = false;
        for (int i = 0; i < a.size()-1;i++){
            if(a[i]>a[i+1]){
                a[i] += a[i + 1];
                a[i + 1] = a[i] - a[i + 1];
                a[i] = a[i] - a[i + 1];
                swapp = true;
            }
        }
    }
}


2.插入排序
void insertion_sort(int arr[],int length){
    int i, j;
    for (i = 1; i < length;i++){
        int temp = arr[i];
        for (j = i; j > 0 && arr[j - 1] > temp;j--){
            arr[j] = arr[j - 1];
        }
        arr[j] = temp;
    }
}




3.希尔排序
void shellSort(int arr[],int length){
    for (int gap = length / 2; gap > 0;gap/=2){
        int i, j;
        for (i = gap; i < length;i++){
            int temp = arr[i];
            for (j = i; j >= gap && arr[j - gap] > temp;j-=gap){
                arr[j] = arr[j - gap];
            }
            arr[j] = temp;
        }
    }
}


4.快速排序
void quickSort(int arr[], int l, int r)
{
    if (l < r) {
        int i = l;
        int j = r;
        int temp = arr[i];
        while (i < j) { 
            while (arr[j] > temp && i < j) {   //俩个while不能颠倒次序
                j--;
            }
            arr[i] = arr[j];

            while (arr[i] <= temp && i < j) {
                i++;
            }
            arr[j] = arr[i];


        }
        arr[i] = temp;
        quickSort(arr, l, i - 1);
        quickSort(arr, i + 1, r);
    }
}

